{"version":3,"file":"static/js/main.4660d53c92ebb383d652.js","mappings":"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","sources":["webpack://test-task-byndyusoft/./src/hooks/index.ts","webpack://test-task-byndyusoft/./src/redux/actions/calc-actions.ts","webpack://test-task-byndyusoft/./src/components/keyboard-button/keyboard-button.module.scss?eba2","webpack://test-task-byndyusoft/./src/components/keyboard-button/keyboard-button.tsx","webpack://test-task-byndyusoft/./src/components/keyboard/keyboard.module.scss?623d","webpack://test-task-byndyusoft/./src/consts/index.ts","webpack://test-task-byndyusoft/./src/utils/add-token-to-input.ts","webpack://test-task-byndyusoft/./src/components/keyboard/keyboard.tsx","webpack://test-task-byndyusoft/./src/utils/execute.ts","webpack://test-task-byndyusoft/./src/utils/to-postfix.ts","webpack://test-task-byndyusoft/./src/components/output-section/output-section.module.scss?5ab1","webpack://test-task-byndyusoft/./src/components/output-section/output-section.tsx","webpack://test-task-byndyusoft/./src/components/calculator/calculator.module.scss?6b6d","webpack://test-task-byndyusoft/./src/components/calculator/calculator.tsx","webpack://test-task-byndyusoft/./src/components/app/app.modules.scss?45c4","webpack://test-task-byndyusoft/./src/components/app/app.tsx","webpack://test-task-byndyusoft/./src/redux/reducers/root.ts","webpack://test-task-byndyusoft/./src/index.tsx"],"sourcesContent":["import { AppThunk, AppDispatch, TRootState } from './../types/index';\r\nimport { TypedUseSelectorHook, useSelector as selectorHook, useDispatch as dispatchHook } from \"react-redux\";\r\n\r\nexport const useSelector: TypedUseSelectorHook<TRootState> = selectorHook;\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();","import { TCalcState } from \"../reducers/root\";\r\n\r\nexport const SAVE_FORM: \"SAVE_FORM\" = \"SAVE_FORM\";\r\nexport const CLEAR_CALC: \"CLEAR_CALC\" = \"CLEAR_CALC\";\r\nexport const UPDATE_INPUT: \"UPDATE_INPUT\" = \"UPDATE_INPUT\";\r\nexport const UPDATE_RESULT: \"UPDATE_RESULT\" = \"UPDATE_RESULT\";\r\n\r\nexport type TSaveForm = {\r\n  type: typeof SAVE_FORM;\r\n  form: TCalcState;\r\n}\r\n\r\nexport type TClearCalc = {\r\n  type: typeof CLEAR_CALC;\r\n}\r\n\r\nexport type TUpdateInput = {\r\n  type: typeof UPDATE_INPUT;\r\n  value: string;\r\n}\r\n\r\nexport type TUpdateResult = {\r\n  type: typeof UPDATE_RESULT;\r\n  value: string;\r\n}\r\n\r\nexport const saveForm = (form: TCalcState): TSaveForm => {\r\n  return {\r\n    type: SAVE_FORM,\r\n    form\r\n  };\r\n};\r\n\r\nexport const clearCalc = (): TClearCalc => {\r\n  return {\r\n    type: CLEAR_CALC\r\n  };\r\n};\r\n\r\nexport const updateInput = ( value: string ): TUpdateInput => {\r\n  return {\r\n    type: UPDATE_INPUT,\r\n    value\r\n  };\r\n};\r\n\r\nexport const updateResult = ( value: string ): TUpdateResult => {\r\n  return {\r\n    type: UPDATE_RESULT,\r\n    value\r\n  };\r\n};\r\n\r\nexport type TCalcActions = TSaveForm | TClearCalc | TUpdateInput | TUpdateResult; ","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"keyboard-button-module__wrapper--LoMrW\",\"equal\":\"keyboard-button-module__equal--eyjLK\"};","import { FC, MouseEvent } from 'react';\r\n\r\n// Styles\r\nimport styles from './keyboard-button.module.scss';\r\n\r\ntype TKeyboardButtonProps = {\r\n  value: string;\r\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\r\n  equal?: boolean;\r\n}\r\n\r\nconst KeyboardButton:FC<TKeyboardButtonProps> = ({ value, onClick, equal }) => {\r\n  const className = `${styles.wrapper} ${equal ? styles.equal : ''}`;\r\n  return (\r\n    <div className={className} onClick={onClick}>\r\n      {value}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KeyboardButton;","// extracted by mini-css-extract-plugin\nexport default {\"keyboard\":\"keyboard-module__keyboard--iTvXP\"};","export const operators = {\r\n  bracketOpen: {\r\n    output: \"(\",\r\n    token: \"(\",\r\n    priority: 0\r\n  },\r\n  bracketClose: {\r\n    output: \")\",\r\n    token: \")\",\r\n    priority: 0\r\n  },\r\n  plus: {\r\n    output: \"+\",\r\n    token: \"+\",\r\n    priority: 1\r\n  },\r\n  minus: {\r\n    output: \"-\",\r\n    token: \"-\",\r\n    priority: 1\r\n  },\r\n  multiplication: {\r\n    output: \"\\u00D7\",\r\n    token: \"*\",\r\n    priority: 2,\r\n  },\r\n  division: {\r\n    output: \"/\",\r\n    token: \"/\",\r\n    priority: 2\r\n  },\r\n  square: {\r\n    output: \"\\u221A\",\r\n    token: \"undefined\",\r\n    priority: 0\r\n  },\r\n  comma: {\r\n    output: \",\",\r\n    token: \",\",\r\n    priority: 10\r\n  },\r\n  percent: {\r\n    output: \"%\",\r\n    token: \"%\", \r\n    priority: 3\r\n  }\r\n};\r\n\r\n","import { operators } from \"../consts\";\r\n\r\n\r\n\r\nexport const addTokenToInput = (token: string, input: string, isCalculated: boolean): string => {\r\n  let returnString = '',\r\n    key: keyof typeof operators,\r\n    isLastOperator = false,\r\n    isCurrentOperator = false;\r\n  \r\n  for (key in operators) {\r\n    if( operators[key].output === input[input.length-1] && input[input.length-1] !== operators.bracketClose.output) isLastOperator = true;\r\n    if( operators[key].token === token ) {\r\n      isCurrentOperator = true;\r\n      if (key === 'multiplication') token = operators.multiplication.output;\r\n    }\r\n  }\r\n\r\n  if ( !input )  {\r\n    if ( isCurrentOperator ) input += '0';\r\n    if ( token === '00') token = '0';\r\n  }\r\n\r\n  if ( input === '0' && ( token === '00' || token === '0')) token = '';\r\n\r\n  if (isCalculated && isCurrentOperator) token = '0' + token;\r\n\r\n  if ( isLastOperator && isCurrentOperator ) returnString = `${input.slice(0, input.length-1)}${token}`;\r\n  else returnString = `${(isCalculated ? '' : input)}${token}`;\r\n\r\n  return returnString;\r\n};\r\n","import { useEffect, useRef, useState, FC, MouseEvent } from 'react';\r\nimport { useDispatch, useSelector } from '../../hooks';\r\nimport { clearCalc, updateInput, updateResult } from '../../redux/actions/calc-actions';\r\n\r\n// Components\r\nimport KeyboardButton from '../keyboard-button/keyboard-button';\r\n\r\n// Styles\r\nimport styles from './keyboard.module.scss';\r\n\r\n// Utils\r\nimport { toPostfix } from '../../utils/to-postfix';\r\nimport { execute } from '../../utils/execute';\r\n\r\n// Consts\r\nimport { operators } from '../../consts';\r\nimport { addTokenToInput } from '../../utils/add-token-to-input';\r\n\r\nconst checkMultiplication = (token: string | null): string => {\r\n  if (token === operators.multiplication.output) {\r\n    token = operators.multiplication.token;\r\n  } \r\n  return token ? token : '';\r\n};\r\n\r\nconst Keyboard: FC = () => {\r\n  const \r\n    [isKeyPressed, setIsKeyPressed] = useState(false),\r\n    keys = [\r\n      \"C\", \r\n      operators.square.output, \r\n      operators.percent.output, \r\n      operators.division.output, \r\n      \"7\", \r\n      \"8\", \r\n      \"9\", \r\n      operators.multiplication.output, \r\n      \"4\", \r\n      \"5\", \r\n      \"6\", \r\n      operators.minus.output, \r\n      \"1\", \r\n      \"2\", \r\n      \"3\", \r\n      operators.plus.output, \r\n      \"00\", \r\n      \"0\", \r\n      operators.comma.output, \r\n      \"=\"\r\n    ],\r\n    { input, isCalculated } = useSelector(store => store.calc),\r\n    dispatch = useDispatch(),\r\n    calcInputRef = useRef(input),\r\n    isKeyPressedRef = useRef(isKeyPressed),\r\n    isCalculatedRef = useRef(isCalculated);\r\n\r\n  const calculate = (infixStr: string ): string => {    \r\n    const postfixStrArray = toPostfix(infixStr);\r\n    const result = execute(postfixStrArray);\r\n\r\n    return result;\r\n  };\r\n\r\n  const onButtonClick = (e: MouseEvent<HTMLElement>) => {\r\n    const target = e.target as Element;\r\n    const token = checkMultiplication(target.textContent);\r\n\r\n    switch (token) {\r\n    case \"C\":\r\n      dispatch(clearCalc());\r\n      break;\r\n    case operators.square.output:\r\n      if ( !input ) dispatch(updateInput(`${token}(0)`));\r\n      else dispatch(updateInput(`${token}(${input})`));\r\n      break;\r\n    case \"=\":\r\n      dispatch(updateResult(calculate(input)));\r\n      break;\r\n    default:\r\n      if ( isCalculated ) dispatch(clearCalc());\r\n      dispatch(updateInput(addTokenToInput(token, input, isCalculated)));\r\n    } \r\n  };\r\n\r\n  const onKeyDown = (e: KeyboardEvent) => {\r\n    const input = calcInputRef.current;\r\n    if ( typeof input === 'string') {\r\n      if (e.key !== 'Shift') setIsKeyPressed(true);\r\n      if (!isKeyPressedRef.current) {\r\n        switch (e.key) {\r\n        case \"Enter\":\r\n          dispatch(updateResult(calculate(input)));\r\n          break;\r\n        case \"Escape\":\r\n          dispatch(clearCalc());\r\n          break;\r\n        case '0':\r\n        case '1':\r\n        case '2':\r\n        case '3':\r\n        case '4':\r\n        case '5':\r\n        case '6':\r\n        case '7':\r\n        case '8':\r\n        case '9':\r\n        case '+':\r\n        case '-':\r\n        case '/':\r\n        case '*':\r\n        case '%':\r\n          if ( isCalculatedRef.current ) dispatch(clearCalc());\r\n          \r\n          dispatch(updateInput(addTokenToInput(e.key, input, isCalculatedRef.current)));\r\n          break;\r\n        default:\r\n          if ( e.shiftKey && e.key === '%' ) {\r\n            dispatch(updateInput(addTokenToInput(e.key, input, isCalculatedRef.current)));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const onKeyUp = () => {\r\n    setIsKeyPressed(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calcInputRef.current = input;\r\n    isKeyPressedRef.current = isKeyPressed;\r\n    isCalculatedRef.current = isCalculated;\r\n\r\n  }, [input, isKeyPressed, isCalculated]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', (e) => onKeyDown(e));\r\n    document.addEventListener('keyup', () => onKeyUp());\r\n    return () => {\r\n      document.removeEventListener('keydown', (e) => onKeyDown(e));\r\n      document.removeEventListener('keyup', () => onKeyUp());\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`${styles.keyboard}`} >\r\n      {keys.map((el, index) => {\r\n        if ( el === \"=\" ) return <KeyboardButton value={el} onClick={onButtonClick} key={index} equal />;\r\n        return <KeyboardButton value={el} onClick={onButtonClick} key={index}/>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keyboard;","import { operators } from \"../consts\";\r\n\r\nexport const execute = (postfixStr: Array<string>) => {\r\n  const stack: Array<number> = [];\r\n\r\n  postfixStr.forEach((el, index) => {\r\n    const currentElAsNumber = Number.parseFloat(el);\r\n    if ( !isNaN(currentElAsNumber) ) {\r\n      stack.push(currentElAsNumber);\r\n    } else {\r\n      let temp = 0;\r\n      const first = stack[stack.length-2];\r\n      const second = stack[stack.length-1];\r\n      switch (el) {\r\n      case operators.plus.output:\r\n        temp = first + second;\r\n        break;\r\n      case operators.minus.output:\r\n        temp = first - second;\r\n        break;\r\n      case operators.multiplication.output:\r\n        temp = first * second;\r\n        break;\r\n      case operators.division.output:\r\n        temp = first / second;\r\n        break;\r\n      case operators.square.output:\r\n        temp = Math.sqrt(second);\r\n        break; \r\n      case operators.percent.output:\r\n        if ( postfixStr[index+1] === operators.plus.output || postfixStr[index+1] === operators.minus.output ) temp = first * second / 100;\r\n        if ( postfixStr[index+1] === operators.multiplication.output || postfixStr[index+1] === operators.division.output ) temp = second / 100;\r\n        break; \r\n      }\r\n      \r\n      el === operators.percent.output ? stack.splice(stack.length-1, 1) : stack.splice(stack.length-2, 2);\r\n      stack.push(temp);\r\n    }\r\n  });\r\n\r\n  const result = stack[0].toString().replace(/\\./, ',').slice(0,9);\r\n\r\n  return result;\r\n};\r\n","import { operators } from \"../consts\";\r\n\r\nexport const toPostfix = (input: string): Array<string> => {\r\n  let \r\n    numAsStr = '';\r\n  const \r\n    stack: Array<{output: string, token: string, priority: number}> = [],\r\n    postfixStr = [],\r\n    infixStr = input.split('');\r\n\r\n  infixStr.forEach(currentToken => {\r\n    if( !isNaN(+currentToken) ) {\r\n      numAsStr += currentToken;\r\n    } else if (currentToken === operators.comma.output) {\r\n      numAsStr += '.';\r\n    }  else if ( currentToken === operators.square.output) {\r\n      stack.push(operators.square);\r\n    } else if (currentToken === operators.bracketOpen.output ) {\r\n      stack.push(operators.bracketOpen);\r\n    } else /**/ {\r\n      if ( numAsStr !== '') {\r\n        postfixStr.push(numAsStr);\r\n        numAsStr = '';\r\n      }\r\n      const currentTokenWithPriority = Object.entries(operators).find(([, value]) => value.output === currentToken);\r\n      if (currentTokenWithPriority) {\r\n        if (stack.length) {\r\n          if(currentToken !== operators.bracketClose.token) {\r\n            if (stack[stack.length-1].priority >= currentTokenWithPriority[1].priority) {\r\n              postfixStr.push(stack[stack.length-1].output);\r\n              stack.pop();\r\n            } \r\n            stack.push(currentTokenWithPriority[1]);\r\n          } else {\r\n            let i = stack.length-1;\r\n            while (stack.length && stack[i].token !== operators.bracketOpen.token) {\r\n              if (stack[i].token !== operators.bracketOpen.token) postfixStr.push(stack[i].output);\r\n              stack.pop();\r\n              i--;\r\n            }\r\n            if( stack[i].token === operators.bracketOpen.token ) {\r\n              stack.pop();\r\n              postfixStr.push(stack[i-1].output);\r\n              stack.pop();\r\n            }\r\n          }\r\n        } else {\r\n          stack.push(currentTokenWithPriority[1]);\r\n        }\r\n\r\n        \r\n      }  else return 'Error';\r\n    }\r\n  });\r\n  if (numAsStr) postfixStr.push(numAsStr);\r\n  if (stack.length) {\r\n    stack.reverse().forEach(el => {\r\n      if(el.output !== operators.bracketClose.output) postfixStr.push(el.output);\r\n    });\r\n  }\r\n  return postfixStr;\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"outputSection\":\"output-section-module__outputSection--G0AAQ\",\"output\":\"output-section-module__output--swxna\",\"result\":\"output-section-module__result--YDPBz\"};","import { FC } from \"react\";\r\n\r\n// Styles\r\nimport styles from './output-section.module.scss';\r\n\r\ntype TOutputSectionProps = {\r\n  inputValue?: string;\r\n  result?: string;\r\n  \r\n};\r\n\r\nconst OutputSection: FC<TOutputSectionProps> = ({ inputValue, result }) => {\r\n  return (\r\n    <div className={`${styles.outputSection}`}>\r\n      <div className={`${styles.output}`}>{inputValue}</div>\r\n      <div className={`${styles.result}`}>{result}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutputSection;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"calculator-module__wrapper--x5tSn\"};","import { FC } from \"react\";\r\nimport { useSelector } from \"../../hooks\";\r\nimport Keyboard from \"../keyboard/keyboard\";\r\nimport OutputSection from \"../output-section/output-section\";\r\n\r\n// Styles\r\nimport styles from './calculator.module.scss';\r\n\r\nconst Calculator: FC = () => {\r\n  const { result, input } = useSelector(store => store.calc);\r\n  // const Keyboard = lazy(() => import('../keyboard/keyboard'));\r\n  // const OutputSection = lazy(() => import('../output-section/output-section'));\r\n  \r\n  return (\r\n    <div className={`${styles.wrapper}`}>\r\n      <OutputSection inputValue={input} result={result} />\r\n      <Keyboard />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;","// extracted by mini-css-extract-plugin\nexport default {\"calcOverlay\":\"app-modules__calcOverlay--UsPi_\"};","import { FC } from \"react\";\r\nimport Calculator from \"../calculator/calculator\";\r\n\r\n// styles\r\nimport styles from './app.modules.scss';\r\n\r\nconst App: FC = () => {\r\n  return (\r\n    <div className={`${styles.calcOverlay}`}>\r\n      <Calculator />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import { UPDATE_INPUT, CLEAR_CALC, UPDATE_RESULT } from './../actions/calc-actions';\r\nimport { TCalcActions } from '../actions/calc-actions';\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport type TCalcState = {\r\n  result: string;\r\n  input: string;\r\n  isCalculated: boolean;\r\n};\r\n\r\nexport const calcInitialState: TCalcState = {\r\n  result: '',\r\n  input: '',\r\n  isCalculated: false,\r\n};\r\n\r\nexport const calcReducer = (state = calcInitialState, action: TCalcActions): TCalcState => {\r\n  switch (action.type) {\r\n  case CLEAR_CALC: {\r\n    return calcInitialState;\r\n  }\r\n  case UPDATE_INPUT: {\r\n    return {\r\n      ...state,\r\n      input: action.value,\r\n    };\r\n  }\r\n  case UPDATE_RESULT: {\r\n    return {\r\n      ...state,\r\n      result: action.value,\r\n      isCalculated: true,\r\n    };\r\n  }\r\n  default: return state;\r\n  }\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n  calc: calcReducer\r\n});","import { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport App from './components/app/app';\r\nimport './global-styles.scss';\r\nimport { rootReducer } from './redux/reducers/root';\r\n\r\nconst composedEnhancers = process.env.NODE_ENV === 'production' ? compose(applyMiddleware(thunk)) : composeWithDevTools(applyMiddleware(thunk));\r\nexport const store = createStore(rootReducer, composedEnhancers);\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </StrictMode>, \r\n  document.getElementById('root')\r\n);"],"names":["useSelector","CLEAR_CALC","UPDATE_INPUT","UPDATE_RESULT","clearCalc","type","updateInput","value","updateResult","onClick","equal","className","operators","bracketOpen","output","token","priority","bracketClose","plus","minus","multiplication","division","square","comma","percent","addTokenToInput","input","isCalculated","key","isLastOperator","isCurrentOperator","length","slice","useState","isKeyPressed","setIsKeyPressed","keys","store","calc","dispatch","calcInputRef","useRef","isKeyPressedRef","isCalculatedRef","calculate","infixStr","postfixStr","stack","postfixStrArray","numAsStr","split","forEach","currentToken","isNaN","push","currentTokenWithPriority","Object","entries","find","pop","i","reverse","el","toPostfix","index","currentElAsNumber","Number","parseFloat","temp","first","second","Math","sqrt","splice","toString","replace","onButtonClick","e","checkMultiplication","target","textContent","onKeyDown","current","shiftKey","onKeyUp","useEffect","document","addEventListener","removeEventListener","map","inputValue","result","calcInitialState","rootReducer","state","action","composedEnhancers","StrictMode","getElementById"],"sourceRoot":""}